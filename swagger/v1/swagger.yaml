---
openapi: 3.0.1
info:
  title: Aza fx api
  version: v1
  contact:
    name: Michael Agboola
    email: drexlar37@gmail.com
paths:
  "/register":
    post:
      summary: Creates a user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: user created
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      email:
                        type: string
                        example: johndoe@gmail.com
                      user_id:
                        type: string
                        example: 6f6cfa52-0e8b-44ab-9455-c6b8410aa0b0
                      password_digest:
                        type: string
                        example: "$2a$12$3rCA9FkpCnfZ7ytbX5jSw.m7KfSsXyHNbuvIxPB2be8J9qdnTyVXW"
                      created_at:
                        type: string
                        example: '2022-08-15T23:21:10.516Z'
                      updated_at:
                        type: string
                        example: '2022-08-15T23:21:10.516Z'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_registration:
                    type: string
                    example: user already exists
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@gmail.com
                password:
                  type: string
                  example: password
              required:
              - email
              - password
  "/authenticate":
    post:
      summary: Authenticates a user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: User authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOGJmZjE3MTktZDk2MC00M2QwLWJkZDUtNTlhMmU1NTg5YzEwIiwiZXhwIjoxNjYwNjg4MTY2fQ.VBpE-aqzeo7nYE2IvXj2y89-tHMmYNleZ1Mh7n6gcjE
        '401':
          description: invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_authentication:
                    type: string
                    example: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@gmail.com
                password:
                  type: string
                  example: password
              required:
              - email
              - password
  "/transactions":
    post:
      summary: Creates a transaction
      tags:
      - Transactions
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: transaction created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2
                  user_id:
                    type: string
                    example: 8bff1719-d960-43d0-bdd5-59a2e5589c10
                  transaction_id:
                    type: string
                    example: 1f35c83a-0be4-4b1e-b98b-50f278dc874d
                  input_amount:
                    type: string
                    example: '100.0'
                  input_currency:
                    type: string
                    example: USD
                  output_amount:
                    type: string
                    example: '42331.89742'
                  output_currency:
                    type: string
                    example: NGN
                  created_at:
                    type: string
                    example: '2022-08-15T22:32:11.049Z'
                  updated_at:
                    type: string
                    example: '2022-08-15T22:32:11.049Z'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input_amount:
                  type: integer
                  example: 100
                input_currency:
                  type: string
                  example: USD
                output_currency:
                  type: string
                  example: NGN
              required:
              - input_amount
              - input_currency
              - output_currency
    get:
      summary: Retrieves all user transactions
      tags:
      - Transactions
      security:
      - bearer_auth: []
      responses:
        '200':
          description: transactions found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 2
                    user_id:
                      type: string
                      example: 8bff1719-d960-43d0-bdd5-59a2e5589c10
                    transaction_id:
                      type: string
                      example: 1f35c83a-0be4-4b1e-b98b-50f278dc874d
                    input_amount:
                      type: string
                      example: '100.0'
                    input_currency:
                      type: string
                      example: USD
                    output_amount:
                      type: string
                      example: '42331.89742'
                    output_currency:
                      type: string
                      example: NGN
                    created_at:
                      type: string
                      example: '2022-08-15T22:32:11.049Z'
                    updated_at:
                      type: string
                      example: '2022-08-15T22:32:11.049Z'
  "/transactions/{id}":
    get:
      summary: Retrieves a transaction
      tags:
      - Transactions
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: transaction found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2
                  user_id:
                    type: string
                    example: 8bff1719-d960-43d0-bdd5-59a2e5589c10
                  transaction_id:
                    type: string
                    example: 1f35c83a-0be4-4b1e-b98b-50f278dc874d
                  input_amount:
                    type: string
                    example: '100.0'
                  input_currency:
                    type: string
                    example: USD
                  output_amount:
                    type: string
                    example: '42331.89742'
                  output_currency:
                    type: string
                    example: NGN
                  created_at:
                    type: string
                    example: '2022-08-15T22:32:11.049Z'
                  updated_at:
                    type: string
                    example: '2022-08-15T22:32:11.049Z'
        '404':
          description: transaction not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: transaction not found
schemes:
- http
host: localhost:3000
basePath: "/api/v1"
servers:
- url: http://localhost:3000/api/v1
  description: DEV Env
- url: http://aza-fx-api.herokuapp.com/api/v1
  description: PROD Env
components:
  schema: {}
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearer_format: JWT
  security:
  - bearer_auth: []
